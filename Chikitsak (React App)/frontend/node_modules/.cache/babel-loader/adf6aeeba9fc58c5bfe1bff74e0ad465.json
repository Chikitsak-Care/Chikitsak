{"ast":null,"code":"\"use strict\";\n/**\r\n * Copyright (c) Microsoft Corporation\r\n *  All Rights Reserved\r\n *  MIT License\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this\r\n * software and associated documentation files (the 'Software'), to deal in the Software\r\n * without restriction, including without limitation the rights to use, copy, modify,\r\n * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to the following\r\n * conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\r\n * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\r\n * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Utils_1 = require(\"./Utils\");\n\nvar User =\n/** @class */\nfunction () {\n  /*\r\n   * @hidden\r\n   */\n  function User(displayableId, name, identityProvider, userIdentifier, idToken) {\n    this.displayableId = displayableId;\n    this.name = name;\n    this.identityProvider = identityProvider;\n    this.userIdentifier = userIdentifier;\n    this.idToken = idToken;\n  }\n  /*\r\n   * @hidden\r\n   */\n\n\n  User.createUser = function (idToken, clientInfo, authority) {\n    var uid;\n    var utid;\n\n    if (!clientInfo) {\n      uid = \"\";\n      utid = \"\";\n    } else {\n      uid = clientInfo.uid;\n      utid = clientInfo.utid;\n    }\n\n    var userIdentifier = Utils_1.Utils.base64EncodeStringUrlSafe(uid) + \".\" + Utils_1.Utils.base64EncodeStringUrlSafe(utid);\n    return new User(idToken.preferredName, idToken.name, idToken.issuer, userIdentifier, idToken.decodedIdToken);\n  };\n\n  return User;\n}();\n\nexports.User = User;","map":{"version":3,"sources":["../src/User.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AAEA,IAAA,IAAA;AAAA;AAAA,YAAA;AAQI;;;AAGA,WAAA,IAAA,CAAY,aAAZ,EAAmC,IAAnC,EAAiD,gBAAjD,EAA2E,cAA3E,EAAmG,OAAnG,EAAiH;AAC7G,SAAK,aAAL,GAAqB,aAArB;AACA,SAAK,IAAL,GAAY,IAAZ;AACA,SAAK,gBAAL,GAAwB,gBAAxB;AACA,SAAK,cAAL,GAAsB,cAAtB;AACA,SAAK,OAAL,GAAe,OAAf;AACH;AAED;;;;;AAGO,EAAA,IAAA,CAAA,UAAA,GAAP,UAAkB,OAAlB,EAAoC,UAApC,EAA4D,SAA5D,EAA6E;AACzE,QAAI,GAAJ;AACA,QAAI,IAAJ;;AACA,QAAI,CAAC,UAAL,EAAiB;AACb,MAAA,GAAG,GAAG,EAAN;AACA,MAAA,IAAI,GAAG,EAAP;AACH,KAHD,MAIK;AACD,MAAA,GAAG,GAAG,UAAU,CAAC,GAAjB;AACA,MAAA,IAAI,GAAG,UAAU,CAAC,IAAlB;AACH;;AAED,QAAM,cAAc,GAAG,OAAA,CAAA,KAAA,CAAM,yBAAN,CAAgC,GAAhC,IAAuC,GAAvC,GAA6C,OAAA,CAAA,KAAA,CAAM,yBAAN,CAAgC,IAAhC,CAApE;AACA,WAAO,IAAI,IAAJ,CAAS,OAAO,CAAC,aAAjB,EAAgC,OAAO,CAAC,IAAxC,EAA8C,OAAO,CAAC,MAAtD,EAA8D,cAA9D,EAA8E,OAAO,CAAC,cAAtF,CAAP;AACH,GAdM;;AAeX,SAAA,IAAA;AAAC,CArCD,EAAA;;AAAa,OAAA,CAAA,IAAA,GAAA,IAAA","sourceRoot":"","sourcesContent":["\"use strict\";\r\n/**\r\n * Copyright (c) Microsoft Corporation\r\n *  All Rights Reserved\r\n *  MIT License\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this\r\n * software and associated documentation files (the 'Software'), to deal in the Software\r\n * without restriction, including without limitation the rights to use, copy, modify,\r\n * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to the following\r\n * conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\r\n * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\r\n * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Utils_1 = require(\"./Utils\");\r\nvar User = /** @class */ (function () {\r\n    /*\r\n     * @hidden\r\n     */\r\n    function User(displayableId, name, identityProvider, userIdentifier, idToken) {\r\n        this.displayableId = displayableId;\r\n        this.name = name;\r\n        this.identityProvider = identityProvider;\r\n        this.userIdentifier = userIdentifier;\r\n        this.idToken = idToken;\r\n    }\r\n    /*\r\n     * @hidden\r\n     */\r\n    User.createUser = function (idToken, clientInfo, authority) {\r\n        var uid;\r\n        var utid;\r\n        if (!clientInfo) {\r\n            uid = \"\";\r\n            utid = \"\";\r\n        }\r\n        else {\r\n            uid = clientInfo.uid;\r\n            utid = clientInfo.utid;\r\n        }\r\n        var userIdentifier = Utils_1.Utils.base64EncodeStringUrlSafe(uid) + \".\" + Utils_1.Utils.base64EncodeStringUrlSafe(utid);\r\n        return new User(idToken.preferredName, idToken.name, idToken.issuer, userIdentifier, idToken.decodedIdToken);\r\n    };\r\n    return User;\r\n}());\r\nexports.User = User;\r\n//# sourceMappingURL=User.js.map"]},"metadata":{},"sourceType":"script"}