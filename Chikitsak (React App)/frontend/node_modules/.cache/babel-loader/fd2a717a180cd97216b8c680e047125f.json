{"ast":null,"code":"\"use strict\";\n/**\r\n * Copyright (c) Microsoft Corporation\r\n *  All Rights Reserved\r\n *  MIT License\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this\r\n * software and associated documentation files (the 'Software'), to deal in the Software\r\n * without restriction, including without limitation the rights to use, copy, modify,\r\n * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to the following\r\n * conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\r\n * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\r\n * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Utils_1 = require(\"./Utils\");\n/*\r\n * @hidden\r\n */\n\n\nvar AuthenticationRequestParameters =\n/** @class */\nfunction () {\n  function AuthenticationRequestParameters(authority, clientId, scope, responseType, redirectUri) {\n    this.authorityInstance = authority;\n    this.clientId = clientId;\n    this.scopes = scope;\n    this.responseType = responseType;\n    this.redirectUri = redirectUri; // randomly generated values\n\n    this.correlationId = Utils_1.Utils.createNewGuid();\n    this.state = Utils_1.Utils.createNewGuid();\n    this.nonce = Utils_1.Utils.createNewGuid(); // telemetry information\n\n    this.xClientSku = \"MSAL.JS\";\n    this.xClientVer = Utils_1.Utils.getLibraryVersion();\n  }\n\n  Object.defineProperty(AuthenticationRequestParameters.prototype, \"authority\", {\n    get: function () {\n      return this.authorityInstance.CanonicalAuthority;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  AuthenticationRequestParameters.prototype.createNavigateUrl = function (scopes) {\n    if (!scopes) {\n      scopes = [this.clientId];\n    }\n\n    if (scopes.indexOf(this.clientId) === -1) {\n      scopes.push(this.clientId);\n    }\n\n    var str = [];\n    str.push(\"response_type=\" + this.responseType);\n    this.translateclientIdUsedInScope(scopes);\n    str.push(\"scope=\" + encodeURIComponent(this.parseScope(scopes)));\n    str.push(\"client_id=\" + encodeURIComponent(this.clientId));\n    str.push(\"redirect_uri=\" + encodeURIComponent(this.redirectUri));\n    str.push(\"state=\" + encodeURIComponent(this.state));\n    str.push(\"nonce=\" + encodeURIComponent(this.nonce));\n    str.push(\"client_info=1\");\n    str.push(\"x-client-SKU=\" + this.xClientSku);\n    str.push(\"x-client-Ver=\" + this.xClientVer);\n\n    if (this.extraQueryParameters) {\n      str.push(this.extraQueryParameters);\n    }\n\n    str.push(\"client-request-id=\" + encodeURIComponent(this.correlationId));\n    var authEndpoint = this.authorityInstance.AuthorizationEndpoint; // if the endpoint already has queryparams, lets add to it, otherwise add the first one\n\n    if (authEndpoint.indexOf(\"?\") < 0) {\n      authEndpoint += \"?\";\n    } else {\n      authEndpoint += \"&\";\n    }\n\n    var requestUrl = \"\" + authEndpoint + str.join(\"&\");\n    return requestUrl;\n  };\n\n  AuthenticationRequestParameters.prototype.translateclientIdUsedInScope = function (scopes) {\n    var clientIdIndex = scopes.indexOf(this.clientId);\n\n    if (clientIdIndex >= 0) {\n      scopes.splice(clientIdIndex, 1);\n\n      if (scopes.indexOf(\"openid\") === -1) {\n        scopes.push(\"openid\");\n      }\n\n      if (scopes.indexOf(\"profile\") === -1) {\n        scopes.push(\"profile\");\n      }\n    }\n  };\n\n  AuthenticationRequestParameters.prototype.parseScope = function (scopes) {\n    var scopeList = \"\";\n\n    if (scopes) {\n      for (var i = 0; i < scopes.length; ++i) {\n        scopeList += i !== scopes.length - 1 ? scopes[i] + \" \" : scopes[i];\n      }\n    }\n\n    return scopeList;\n  };\n\n  return AuthenticationRequestParameters;\n}();\n\nexports.AuthenticationRequestParameters = AuthenticationRequestParameters;","map":{"version":3,"sources":["../src/AuthenticationRequestParameters.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\r\n/**\r\n * Copyright (c) Microsoft Corporation\r\n *  All Rights Reserved\r\n *  MIT License\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this\r\n * software and associated documentation files (the 'Software'), to deal in the Software\r\n * without restriction, including without limitation the rights to use, copy, modify,\r\n * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to the following\r\n * conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\r\n * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\r\n * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Utils_1 = require(\"./Utils\");\r\n/*\r\n * @hidden\r\n */\r\nvar AuthenticationRequestParameters = /** @class */ (function () {\r\n    function AuthenticationRequestParameters(authority, clientId, scope, responseType, redirectUri) {\r\n        this.authorityInstance = authority;\r\n        this.clientId = clientId;\r\n        this.scopes = scope;\r\n        this.responseType = responseType;\r\n        this.redirectUri = redirectUri;\r\n        // randomly generated values\r\n        this.correlationId = Utils_1.Utils.createNewGuid();\r\n        this.state = Utils_1.Utils.createNewGuid();\r\n        this.nonce = Utils_1.Utils.createNewGuid();\r\n        // telemetry information\r\n        this.xClientSku = \"MSAL.JS\";\r\n        this.xClientVer = Utils_1.Utils.getLibraryVersion();\r\n    }\r\n    Object.defineProperty(AuthenticationRequestParameters.prototype, \"authority\", {\r\n        get: function () {\r\n            return this.authorityInstance.CanonicalAuthority;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    AuthenticationRequestParameters.prototype.createNavigateUrl = function (scopes) {\r\n        if (!scopes) {\r\n            scopes = [this.clientId];\r\n        }\r\n        if (scopes.indexOf(this.clientId) === -1) {\r\n            scopes.push(this.clientId);\r\n        }\r\n        var str = [];\r\n        str.push(\"response_type=\" + this.responseType);\r\n        this.translateclientIdUsedInScope(scopes);\r\n        str.push(\"scope=\" + encodeURIComponent(this.parseScope(scopes)));\r\n        str.push(\"client_id=\" + encodeURIComponent(this.clientId));\r\n        str.push(\"redirect_uri=\" + encodeURIComponent(this.redirectUri));\r\n        str.push(\"state=\" + encodeURIComponent(this.state));\r\n        str.push(\"nonce=\" + encodeURIComponent(this.nonce));\r\n        str.push(\"client_info=1\");\r\n        str.push(\"x-client-SKU=\" + this.xClientSku);\r\n        str.push(\"x-client-Ver=\" + this.xClientVer);\r\n        if (this.extraQueryParameters) {\r\n            str.push(this.extraQueryParameters);\r\n        }\r\n        str.push(\"client-request-id=\" + encodeURIComponent(this.correlationId));\r\n        var authEndpoint = this.authorityInstance.AuthorizationEndpoint;\r\n        // if the endpoint already has queryparams, lets add to it, otherwise add the first one\r\n        if (authEndpoint.indexOf(\"?\") < 0) {\r\n            authEndpoint += \"?\";\r\n        }\r\n        else {\r\n            authEndpoint += \"&\";\r\n        }\r\n        var requestUrl = \"\" + authEndpoint + str.join(\"&\");\r\n        return requestUrl;\r\n    };\r\n    AuthenticationRequestParameters.prototype.translateclientIdUsedInScope = function (scopes) {\r\n        var clientIdIndex = scopes.indexOf(this.clientId);\r\n        if (clientIdIndex >= 0) {\r\n            scopes.splice(clientIdIndex, 1);\r\n            if (scopes.indexOf(\"openid\") === -1) {\r\n                scopes.push(\"openid\");\r\n            }\r\n            if (scopes.indexOf(\"profile\") === -1) {\r\n                scopes.push(\"profile\");\r\n            }\r\n        }\r\n    };\r\n    AuthenticationRequestParameters.prototype.parseScope = function (scopes) {\r\n        var scopeList = \"\";\r\n        if (scopes) {\r\n            for (var i = 0; i < scopes.length; ++i) {\r\n                scopeList += (i !== scopes.length - 1) ? scopes[i] + \" \" : scopes[i];\r\n            }\r\n        }\r\n        return scopeList;\r\n    };\r\n    return AuthenticationRequestParameters;\r\n}());\r\nexports.AuthenticationRequestParameters = AuthenticationRequestParameters;\r\n//# sourceMappingURL=AuthenticationRequestParameters.js.map"]},"metadata":{},"sourceType":"script"}