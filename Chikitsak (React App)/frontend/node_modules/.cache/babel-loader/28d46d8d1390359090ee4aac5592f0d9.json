{"ast":null,"code":"\"use strict\";\n/**\r\n * Copyright (c) Microsoft Corporation\r\n *  All Rights Reserved\r\n *  MIT License\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this\r\n * software and associated documentation files (the 'Software'), to deal in the Software\r\n * without restriction, including without limitation the rights to use, copy, modify,\r\n * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to the following\r\n * conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\r\n * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\r\n * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\r\n * @hidden\r\n */\n\nvar Utils =\n/** @class */\nfunction () {\n  function Utils() {}\n\n  Utils.compareObjects = function (u1, u2) {\n    if (!u1 || !u2) {\n      return false;\n    }\n\n    if (u1.userIdentifier && u2.userIdentifier) {\n      if (u1.userIdentifier === u2.userIdentifier) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  Utils.expiresIn = function (expires) {\n    // if AAD did not send \"expires_in\" property, use default expiration of 3599 seconds, for some reason AAD sends 3599 as \"expires_in\" value instead of 3600\n    if (!expires) {\n      expires = \"3599\";\n    }\n\n    return this.now() + parseInt(expires, 10);\n  };\n\n  Utils.now = function () {\n    return Math.round(new Date().getTime() / 1000.0);\n  };\n\n  Utils.isEmpty = function (str) {\n    return typeof str === \"undefined\" || !str || 0 === str.length;\n  };\n\n  Utils.extractIdToken = function (encodedIdToken) {\n    // id token will be decoded to get the username\n    var decodedToken = this.decodeJwt(encodedIdToken);\n\n    if (!decodedToken) {\n      return null;\n    }\n\n    try {\n      var base64IdToken = decodedToken.JWSPayload;\n      var base64Decoded = this.base64DecodeStringUrlSafe(base64IdToken);\n\n      if (!base64Decoded) {\n        //this._requestContext.logger.info(\"The returned id_token could not be base64 url safe decoded.\");\n        return null;\n      } // ECMA script has JSON built-in support\n\n\n      return JSON.parse(base64Decoded);\n    } catch (err) {//this._requestContext.logger.error(\"The returned id_token could not be decoded\" + err);\n    }\n\n    return null;\n  };\n\n  Utils.base64EncodeStringUrlSafe = function (input) {\n    // html5 should support atob function for decoding\n    if (window.btoa) {\n      return window.btoa(input);\n    } else {\n      return this.encode(input);\n    }\n  };\n\n  Utils.base64DecodeStringUrlSafe = function (base64IdToken) {\n    // html5 should support atob function for decoding\n    base64IdToken = base64IdToken.replace(/-/g, \"+\").replace(/_/g, \"/\");\n\n    if (window.atob) {\n      return decodeURIComponent(encodeURIComponent(window.atob(base64IdToken))); // jshint ignore:line\n    } else {\n      return decodeURIComponent(encodeURIComponent(this.decode(base64IdToken)));\n    }\n  };\n\n  Utils.encode = function (input) {\n    var keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n    var output = \"\";\n    var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n    var i = 0;\n    input = this.utf8Encode(input);\n\n    while (i < input.length) {\n      chr1 = input.charCodeAt(i++);\n      chr2 = input.charCodeAt(i++);\n      chr3 = input.charCodeAt(i++);\n      enc1 = chr1 >> 2;\n      enc2 = (chr1 & 3) << 4 | chr2 >> 4;\n      enc3 = (chr2 & 15) << 2 | chr3 >> 6;\n      enc4 = chr3 & 63;\n\n      if (isNaN(chr2)) {\n        enc3 = enc4 = 64;\n      } else if (isNaN(chr3)) {\n        enc4 = 64;\n      }\n\n      output = output + keyStr.charAt(enc1) + keyStr.charAt(enc2) + keyStr.charAt(enc3) + keyStr.charAt(enc4);\n    }\n\n    return output.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=+$/, \"\");\n  };\n\n  Utils.utf8Encode = function (input) {\n    input = input.replace(/\\r\\n/g, \"\\n\");\n    var utftext = \"\";\n\n    for (var n = 0; n < input.length; n++) {\n      var c = input.charCodeAt(n);\n\n      if (c < 128) {\n        utftext += String.fromCharCode(c);\n      } else if (c > 127 && c < 2048) {\n        utftext += String.fromCharCode(c >> 6 | 192);\n        utftext += String.fromCharCode(c & 63 | 128);\n      } else {\n        utftext += String.fromCharCode(c >> 12 | 224);\n        utftext += String.fromCharCode(c >> 6 & 63 | 128);\n        utftext += String.fromCharCode(c & 63 | 128);\n      }\n    }\n\n    return utftext;\n  };\n\n  Utils.decode = function (base64IdToken) {\n    var codes = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n    base64IdToken = String(base64IdToken).replace(/=+$/, \"\");\n    var length = base64IdToken.length;\n\n    if (length % 4 === 1) {\n      throw new Error(\"The token to be decoded is not correctly encoded.\");\n    }\n\n    var h1,\n        h2,\n        h3,\n        h4,\n        bits,\n        c1,\n        c2,\n        c3,\n        decoded = \"\";\n\n    for (var i = 0; i < length; i += 4) {\n      //Every 4 base64 encoded character will be converted to 3 byte string, which is 24 bits\n      // then 6 bits per base64 encoded character\n      h1 = codes.indexOf(base64IdToken.charAt(i));\n      h2 = codes.indexOf(base64IdToken.charAt(i + 1));\n      h3 = codes.indexOf(base64IdToken.charAt(i + 2));\n      h4 = codes.indexOf(base64IdToken.charAt(i + 3)); // For padding, if last two are \"=\"\n\n      if (i + 2 === length - 1) {\n        bits = h1 << 18 | h2 << 12 | h3 << 6;\n        c1 = bits >> 16 & 255;\n        c2 = bits >> 8 & 255;\n        decoded += String.fromCharCode(c1, c2);\n        break;\n      } // if last one is \"=\"\n      else if (i + 1 === length - 1) {\n          bits = h1 << 18 | h2 << 12;\n          c1 = bits >> 16 & 255;\n          decoded += String.fromCharCode(c1);\n          break;\n        }\n\n      bits = h1 << 18 | h2 << 12 | h3 << 6 | h4; // then convert to 3 byte chars\n\n      c1 = bits >> 16 & 255;\n      c2 = bits >> 8 & 255;\n      c3 = bits & 255;\n      decoded += String.fromCharCode(c1, c2, c3);\n    }\n\n    return decoded;\n  };\n\n  Utils.decodeJwt = function (jwtToken) {\n    if (this.isEmpty(jwtToken)) {\n      return null;\n    }\n\n    var idTokenPartsRegex = /^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/;\n    var matches = idTokenPartsRegex.exec(jwtToken);\n\n    if (!matches || matches.length < 4) {\n      //this._requestContext.logger.warn(\"The returned id_token is not parseable.\");\n      return null;\n    }\n\n    var crackedToken = {\n      header: matches[1],\n      JWSPayload: matches[2],\n      JWSSig: matches[3]\n    };\n    return crackedToken;\n  };\n\n  Utils.deserialize = function (query) {\n    var match; // Regex for replacing addition symbol with a space\n\n    var pl = /\\+/g;\n    var search = /([^&=]+)=([^&]*)/g;\n\n    var decode = function (s) {\n      return decodeURIComponent(s.replace(pl, \" \"));\n    };\n\n    var obj = {};\n    match = search.exec(query);\n\n    while (match) {\n      obj[decode(match[1])] = decode(match[2]);\n      match = search.exec(query);\n    }\n\n    return obj;\n  };\n\n  Utils.isIntersectingScopes = function (cachedScopes, scopes) {\n    cachedScopes = this.convertToLowerCase(cachedScopes);\n\n    for (var i = 0; i < scopes.length; i++) {\n      if (cachedScopes.indexOf(scopes[i].toLowerCase()) > -1) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  Utils.containsScope = function (cachedScopes, scopes) {\n    cachedScopes = this.convertToLowerCase(cachedScopes);\n    return scopes.every(function (value) {\n      return cachedScopes.indexOf(value.toString().toLowerCase()) >= 0;\n    });\n  };\n\n  Utils.convertToLowerCase = function (scopes) {\n    return scopes.map(function (scope) {\n      return scope.toLowerCase();\n    });\n  };\n\n  Utils.removeElement = function (scopes, scope) {\n    return scopes.filter(function (value) {\n      return value !== scope;\n    });\n  };\n\n  Utils.decimalToHex = function (num) {\n    var hex = num.toString(16);\n\n    while (hex.length < 2) {\n      hex = \"0\" + hex;\n    }\n\n    return hex;\n  };\n\n  Utils.getLibraryVersion = function () {\n    return \"0.1.9\";\n  };\n  /*\r\n    * Given a url like https://a:b/common/d?e=f#g, and a tenantId, returns https://a:b/tenantId/d\r\n    * @param href The url\r\n    * @param tenantId The tenant id to replace\r\n    */\n\n\n  Utils.replaceFirstPath = function (href, tenantId) {\n    var match = href.match(/^(https?\\:)\\/\\/(([^:\\/?#] *)(?:\\:([0-9]+))?)([\\/]{0,1}[^?#] *)(\\?[^#] *|)(#. *|)$/);\n\n    if (match) {\n      var urlObject = Utils.GetUrlComponents(href);\n      var pathArray = urlObject.PathSegments;\n      pathArray.shift();\n\n      if (pathArray[0] && pathArray[0] === \"common\" || pathArray[0] === \"organizations\") {\n        pathArray[0] = tenantId;\n        href = urlObject.Protocol + \"//\" + urlObject.HostNameAndPort + \"/\" + pathArray.join(\"/\");\n      }\n    }\n\n    return href;\n  };\n\n  Utils.createNewGuid = function () {\n    // RFC4122: The version 4 UUID is meant for generating UUIDs from truly-random or\n    // pseudo-random numbers.\n    // The algorithm is as follows:\n    //     Set the two most significant bits (bits 6 and 7) of the\n    //        clock_seq_hi_and_reserved to zero and one, respectively.\n    //     Set the four most significant bits (bits 12 through 15) of the\n    //        time_hi_and_version field to the 4-bit version number from\n    //        Section 4.1.3. Version4\n    //     Set all the other bits to randomly (or pseudo-randomly) chosen\n    //     values.\n    // UUID                   = time-low \"-\" time-mid \"-\"time-high-and-version \"-\"clock-seq-reserved and low(2hexOctet)\"-\" node\n    // time-low               = 4hexOctet\n    // time-mid               = 2hexOctet\n    // time-high-and-version  = 2hexOctet\n    // clock-seq-and-reserved = hexOctet:\n    // clock-seq-low          = hexOctet\n    // node                   = 6hexOctet\n    // Format: xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\n    // y could be 1000, 1001, 1010, 1011 since most significant two bits needs to be 10\n    // y values are 8, 9, A, B\n    var cryptoObj = window.crypto; // for IE 11\n\n    if (cryptoObj && cryptoObj.getRandomValues) {\n      var buffer = new Uint8Array(16);\n      cryptoObj.getRandomValues(buffer); //buffer[6] and buffer[7] represents the time_hi_and_version field. We will set the four most significant bits (4 through 7) of buffer[6] to represent decimal number 4 (UUID version number).\n\n      buffer[6] |= 0x40; //buffer[6] | 01000000 will set the 6 bit to 1.\n\n      buffer[6] &= 0x4f; //buffer[6] & 01001111 will set the 4, 5, and 7 bit to 0 such that bits 4-7 == 0100 = \"4\".\n      //buffer[8] represents the clock_seq_hi_and_reserved field. We will set the two most significant bits (6 and 7) of the clock_seq_hi_and_reserved to zero and one, respectively.\n\n      buffer[8] |= 0x80; //buffer[8] | 10000000 will set the 7 bit to 1.\n\n      buffer[8] &= 0xbf; //buffer[8] & 10111111 will set the 6 bit to 0.\n\n      return Utils.decimalToHex(buffer[0]) + Utils.decimalToHex(buffer[1]) + Utils.decimalToHex(buffer[2]) + Utils.decimalToHex(buffer[3]) + \"-\" + Utils.decimalToHex(buffer[4]) + Utils.decimalToHex(buffer[5]) + \"-\" + Utils.decimalToHex(buffer[6]) + Utils.decimalToHex(buffer[7]) + \"-\" + Utils.decimalToHex(buffer[8]) + Utils.decimalToHex(buffer[9]) + \"-\" + Utils.decimalToHex(buffer[10]) + Utils.decimalToHex(buffer[11]) + Utils.decimalToHex(buffer[12]) + Utils.decimalToHex(buffer[13]) + Utils.decimalToHex(buffer[14]) + Utils.decimalToHex(buffer[15]);\n    } else {\n      var guidHolder = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\";\n      var hex = \"0123456789abcdef\";\n      var r = 0;\n      var guidResponse = \"\";\n\n      for (var i = 0; i < 36; i++) {\n        if (guidHolder[i] !== \"-\" && guidHolder[i] !== \"4\") {\n          // each x and y needs to be random\n          r = Math.random() * 16 | 0;\n        }\n\n        if (guidHolder[i] === \"x\") {\n          guidResponse += hex[r];\n        } else if (guidHolder[i] === \"y\") {\n          // clock-seq-and-reserved first hex is filtered and remaining hex values are random\n          r &= 0x3; // bit and with 0011 to set pos 2 to zero ?0??\n\n          r |= 0x8; // set pos 3 to 1 as 1???\n\n          guidResponse += hex[r];\n        } else {\n          guidResponse += guidHolder[i];\n        }\n      }\n\n      return guidResponse;\n    }\n  };\n  /*\r\n   * Parses out the components from a url string.\r\n   * @returns An object with the various components. Please cache this value insted of calling this multiple times on the same url.\r\n   */\n\n\n  Utils.GetUrlComponents = function (url) {\n    if (!url) {\n      throw \"Url required\";\n    } // https://gist.github.com/curtisz/11139b2cfcaef4a261e0\n\n\n    var regEx = RegExp(\"^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\\\?([^#]*))?(#(.*))?\");\n    var match = url.match(regEx);\n\n    if (!match || match.length < 6) {\n      throw \"Valid url required\";\n    }\n\n    var urlComponents = {\n      Protocol: match[1],\n      HostNameAndPort: match[4],\n      AbsolutePath: match[5]\n    };\n    var pathSegments = urlComponents.AbsolutePath.split(\"/\");\n    pathSegments = pathSegments.filter(function (val) {\n      return val && val.length > 0;\n    }); // remove empty elements\n\n    urlComponents.PathSegments = pathSegments;\n    return urlComponents;\n  };\n  /*\r\n   * Given a url or path, append a trailing slash if one doesnt exist\r\n   */\n\n\n  Utils.CanonicalizeUri = function (url) {\n    if (url) {\n      url = url.toLowerCase();\n    }\n\n    if (url && !Utils.endsWith(url, \"/\")) {\n      url += \"/\";\n    }\n\n    return url;\n  };\n  /*\r\n    * Checks to see if the url ends with the suffix\r\n    * Required because we are compiling for es5 instead of es6\r\n    * @param url\r\n    * @param str\r\n    */\n\n\n  Utils.endsWith = function (url, suffix) {\n    if (!url || !suffix) {\n      return false;\n    }\n\n    return url.indexOf(suffix, url.length - suffix.length) !== -1;\n  };\n\n  return Utils;\n}();\n\nexports.Utils = Utils;","map":{"version":3,"sources":["../src/Utils.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\r\n/**\r\n * Copyright (c) Microsoft Corporation\r\n *  All Rights Reserved\r\n *  MIT License\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this\r\n * software and associated documentation files (the 'Software'), to deal in the Software\r\n * without restriction, including without limitation the rights to use, copy, modify,\r\n * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to the following\r\n * conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\r\n * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\r\n * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/*\r\n * @hidden\r\n */\r\nvar Utils = /** @class */ (function () {\r\n    function Utils() {\r\n    }\r\n    Utils.compareObjects = function (u1, u2) {\r\n        if (!u1 || !u2) {\r\n            return false;\r\n        }\r\n        if (u1.userIdentifier && u2.userIdentifier) {\r\n            if (u1.userIdentifier === u2.userIdentifier) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    Utils.expiresIn = function (expires) {\r\n        // if AAD did not send \"expires_in\" property, use default expiration of 3599 seconds, for some reason AAD sends 3599 as \"expires_in\" value instead of 3600\r\n        if (!expires) {\r\n            expires = \"3599\";\r\n        }\r\n        return this.now() + parseInt(expires, 10);\r\n    };\r\n    Utils.now = function () {\r\n        return Math.round(new Date().getTime() / 1000.0);\r\n    };\r\n    Utils.isEmpty = function (str) {\r\n        return (typeof str === \"undefined\" || !str || 0 === str.length);\r\n    };\r\n    Utils.extractIdToken = function (encodedIdToken) {\r\n        // id token will be decoded to get the username\r\n        var decodedToken = this.decodeJwt(encodedIdToken);\r\n        if (!decodedToken) {\r\n            return null;\r\n        }\r\n        try {\r\n            var base64IdToken = decodedToken.JWSPayload;\r\n            var base64Decoded = this.base64DecodeStringUrlSafe(base64IdToken);\r\n            if (!base64Decoded) {\r\n                //this._requestContext.logger.info(\"The returned id_token could not be base64 url safe decoded.\");\r\n                return null;\r\n            }\r\n            // ECMA script has JSON built-in support\r\n            return JSON.parse(base64Decoded);\r\n        }\r\n        catch (err) {\r\n            //this._requestContext.logger.error(\"The returned id_token could not be decoded\" + err);\r\n        }\r\n        return null;\r\n    };\r\n    Utils.base64EncodeStringUrlSafe = function (input) {\r\n        // html5 should support atob function for decoding\r\n        if (window.btoa) {\r\n            return window.btoa(input);\r\n        }\r\n        else {\r\n            return this.encode(input);\r\n        }\r\n    };\r\n    Utils.base64DecodeStringUrlSafe = function (base64IdToken) {\r\n        // html5 should support atob function for decoding\r\n        base64IdToken = base64IdToken.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n        if (window.atob) {\r\n            return decodeURIComponent(encodeURIComponent(window.atob(base64IdToken))); // jshint ignore:line\r\n        }\r\n        else {\r\n            return decodeURIComponent(encodeURIComponent(this.decode(base64IdToken)));\r\n        }\r\n    };\r\n    Utils.encode = function (input) {\r\n        var keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n        var output = \"\";\r\n        var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\r\n        var i = 0;\r\n        input = this.utf8Encode(input);\r\n        while (i < input.length) {\r\n            chr1 = input.charCodeAt(i++);\r\n            chr2 = input.charCodeAt(i++);\r\n            chr3 = input.charCodeAt(i++);\r\n            enc1 = chr1 >> 2;\r\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\r\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\r\n            enc4 = chr3 & 63;\r\n            if (isNaN(chr2)) {\r\n                enc3 = enc4 = 64;\r\n            }\r\n            else if (isNaN(chr3)) {\r\n                enc4 = 64;\r\n            }\r\n            output = output + keyStr.charAt(enc1) + keyStr.charAt(enc2) + keyStr.charAt(enc3) + keyStr.charAt(enc4);\r\n        }\r\n        return output.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=+$/, \"\");\r\n    };\r\n    Utils.utf8Encode = function (input) {\r\n        input = input.replace(/\\r\\n/g, \"\\n\");\r\n        var utftext = \"\";\r\n        for (var n = 0; n < input.length; n++) {\r\n            var c = input.charCodeAt(n);\r\n            if (c < 128) {\r\n                utftext += String.fromCharCode(c);\r\n            }\r\n            else if ((c > 127) && (c < 2048)) {\r\n                utftext += String.fromCharCode((c >> 6) | 192);\r\n                utftext += String.fromCharCode((c & 63) | 128);\r\n            }\r\n            else {\r\n                utftext += String.fromCharCode((c >> 12) | 224);\r\n                utftext += String.fromCharCode(((c >> 6) & 63) | 128);\r\n                utftext += String.fromCharCode((c & 63) | 128);\r\n            }\r\n        }\r\n        return utftext;\r\n    };\r\n    Utils.decode = function (base64IdToken) {\r\n        var codes = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n        base64IdToken = String(base64IdToken).replace(/=+$/, \"\");\r\n        var length = base64IdToken.length;\r\n        if (length % 4 === 1) {\r\n            throw new Error(\"The token to be decoded is not correctly encoded.\");\r\n        }\r\n        var h1, h2, h3, h4, bits, c1, c2, c3, decoded = \"\";\r\n        for (var i = 0; i < length; i += 4) {\r\n            //Every 4 base64 encoded character will be converted to 3 byte string, which is 24 bits\r\n            // then 6 bits per base64 encoded character\r\n            h1 = codes.indexOf(base64IdToken.charAt(i));\r\n            h2 = codes.indexOf(base64IdToken.charAt(i + 1));\r\n            h3 = codes.indexOf(base64IdToken.charAt(i + 2));\r\n            h4 = codes.indexOf(base64IdToken.charAt(i + 3));\r\n            // For padding, if last two are \"=\"\r\n            if (i + 2 === length - 1) {\r\n                bits = h1 << 18 | h2 << 12 | h3 << 6;\r\n                c1 = bits >> 16 & 255;\r\n                c2 = bits >> 8 & 255;\r\n                decoded += String.fromCharCode(c1, c2);\r\n                break;\r\n            }\r\n            // if last one is \"=\"\r\n            else if (i + 1 === length - 1) {\r\n                bits = h1 << 18 | h2 << 12;\r\n                c1 = bits >> 16 & 255;\r\n                decoded += String.fromCharCode(c1);\r\n                break;\r\n            }\r\n            bits = h1 << 18 | h2 << 12 | h3 << 6 | h4;\r\n            // then convert to 3 byte chars\r\n            c1 = bits >> 16 & 255;\r\n            c2 = bits >> 8 & 255;\r\n            c3 = bits & 255;\r\n            decoded += String.fromCharCode(c1, c2, c3);\r\n        }\r\n        return decoded;\r\n    };\r\n    Utils.decodeJwt = function (jwtToken) {\r\n        if (this.isEmpty(jwtToken)) {\r\n            return null;\r\n        }\r\n        var idTokenPartsRegex = /^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/;\r\n        var matches = idTokenPartsRegex.exec(jwtToken);\r\n        if (!matches || matches.length < 4) {\r\n            //this._requestContext.logger.warn(\"The returned id_token is not parseable.\");\r\n            return null;\r\n        }\r\n        var crackedToken = {\r\n            header: matches[1],\r\n            JWSPayload: matches[2],\r\n            JWSSig: matches[3]\r\n        };\r\n        return crackedToken;\r\n    };\r\n    Utils.deserialize = function (query) {\r\n        var match; // Regex for replacing addition symbol with a space\r\n        var pl = /\\+/g;\r\n        var search = /([^&=]+)=([^&]*)/g;\r\n        var decode = function (s) { return decodeURIComponent(s.replace(pl, \" \")); };\r\n        var obj = {};\r\n        match = search.exec(query);\r\n        while (match) {\r\n            obj[decode(match[1])] = decode(match[2]);\r\n            match = search.exec(query);\r\n        }\r\n        return obj;\r\n    };\r\n    Utils.isIntersectingScopes = function (cachedScopes, scopes) {\r\n        cachedScopes = this.convertToLowerCase(cachedScopes);\r\n        for (var i = 0; i < scopes.length; i++) {\r\n            if (cachedScopes.indexOf(scopes[i].toLowerCase()) > -1) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    Utils.containsScope = function (cachedScopes, scopes) {\r\n        cachedScopes = this.convertToLowerCase(cachedScopes);\r\n        return scopes.every(function (value) { return cachedScopes.indexOf(value.toString().toLowerCase()) >= 0; });\r\n    };\r\n    Utils.convertToLowerCase = function (scopes) {\r\n        return scopes.map(function (scope) { return scope.toLowerCase(); });\r\n    };\r\n    Utils.removeElement = function (scopes, scope) {\r\n        return scopes.filter(function (value) { return value !== scope; });\r\n    };\r\n    Utils.decimalToHex = function (num) {\r\n        var hex = num.toString(16);\r\n        while (hex.length < 2) {\r\n            hex = \"0\" + hex;\r\n        }\r\n        return hex;\r\n    };\r\n    Utils.getLibraryVersion = function () {\r\n        return \"0.1.9\";\r\n    };\r\n    /*\r\n      * Given a url like https://a:b/common/d?e=f#g, and a tenantId, returns https://a:b/tenantId/d\r\n      * @param href The url\r\n      * @param tenantId The tenant id to replace\r\n      */\r\n    Utils.replaceFirstPath = function (href, tenantId) {\r\n        var match = href.match(/^(https?\\:)\\/\\/(([^:\\/?#] *)(?:\\:([0-9]+))?)([\\/]{0,1}[^?#] *)(\\?[^#] *|)(#. *|)$/);\r\n        if (match) {\r\n            var urlObject = Utils.GetUrlComponents(href);\r\n            var pathArray = urlObject.PathSegments;\r\n            pathArray.shift();\r\n            if (pathArray[0] && pathArray[0] === \"common\" || pathArray[0] === \"organizations\") {\r\n                pathArray[0] = tenantId;\r\n                href = urlObject.Protocol + \"//\" + urlObject.HostNameAndPort + \"/\" + pathArray.join(\"/\");\r\n            }\r\n        }\r\n        return href;\r\n    };\r\n    Utils.createNewGuid = function () {\r\n        // RFC4122: The version 4 UUID is meant for generating UUIDs from truly-random or\r\n        // pseudo-random numbers.\r\n        // The algorithm is as follows:\r\n        //     Set the two most significant bits (bits 6 and 7) of the\r\n        //        clock_seq_hi_and_reserved to zero and one, respectively.\r\n        //     Set the four most significant bits (bits 12 through 15) of the\r\n        //        time_hi_and_version field to the 4-bit version number from\r\n        //        Section 4.1.3. Version4\r\n        //     Set all the other bits to randomly (or pseudo-randomly) chosen\r\n        //     values.\r\n        // UUID                   = time-low \"-\" time-mid \"-\"time-high-and-version \"-\"clock-seq-reserved and low(2hexOctet)\"-\" node\r\n        // time-low               = 4hexOctet\r\n        // time-mid               = 2hexOctet\r\n        // time-high-and-version  = 2hexOctet\r\n        // clock-seq-and-reserved = hexOctet:\r\n        // clock-seq-low          = hexOctet\r\n        // node                   = 6hexOctet\r\n        // Format: xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\r\n        // y could be 1000, 1001, 1010, 1011 since most significant two bits needs to be 10\r\n        // y values are 8, 9, A, B\r\n        var cryptoObj = window.crypto; // for IE 11\r\n        if (cryptoObj && cryptoObj.getRandomValues) {\r\n            var buffer = new Uint8Array(16);\r\n            cryptoObj.getRandomValues(buffer);\r\n            //buffer[6] and buffer[7] represents the time_hi_and_version field. We will set the four most significant bits (4 through 7) of buffer[6] to represent decimal number 4 (UUID version number).\r\n            buffer[6] |= 0x40; //buffer[6] | 01000000 will set the 6 bit to 1.\r\n            buffer[6] &= 0x4f; //buffer[6] & 01001111 will set the 4, 5, and 7 bit to 0 such that bits 4-7 == 0100 = \"4\".\r\n            //buffer[8] represents the clock_seq_hi_and_reserved field. We will set the two most significant bits (6 and 7) of the clock_seq_hi_and_reserved to zero and one, respectively.\r\n            buffer[8] |= 0x80; //buffer[8] | 10000000 will set the 7 bit to 1.\r\n            buffer[8] &= 0xbf; //buffer[8] & 10111111 will set the 6 bit to 0.\r\n            return Utils.decimalToHex(buffer[0]) + Utils.decimalToHex(buffer[1])\r\n                + Utils.decimalToHex(buffer[2]) + Utils.decimalToHex(buffer[3])\r\n                + \"-\" + Utils.decimalToHex(buffer[4]) + Utils.decimalToHex(buffer[5])\r\n                + \"-\" + Utils.decimalToHex(buffer[6]) + Utils.decimalToHex(buffer[7])\r\n                + \"-\" + Utils.decimalToHex(buffer[8]) + Utils.decimalToHex(buffer[9])\r\n                + \"-\" + Utils.decimalToHex(buffer[10]) + Utils.decimalToHex(buffer[11])\r\n                + Utils.decimalToHex(buffer[12]) + Utils.decimalToHex(buffer[13])\r\n                + Utils.decimalToHex(buffer[14]) + Utils.decimalToHex(buffer[15]);\r\n        }\r\n        else {\r\n            var guidHolder = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\";\r\n            var hex = \"0123456789abcdef\";\r\n            var r = 0;\r\n            var guidResponse = \"\";\r\n            for (var i = 0; i < 36; i++) {\r\n                if (guidHolder[i] !== \"-\" && guidHolder[i] !== \"4\") {\r\n                    // each x and y needs to be random\r\n                    r = Math.random() * 16 | 0;\r\n                }\r\n                if (guidHolder[i] === \"x\") {\r\n                    guidResponse += hex[r];\r\n                }\r\n                else if (guidHolder[i] === \"y\") {\r\n                    // clock-seq-and-reserved first hex is filtered and remaining hex values are random\r\n                    r &= 0x3; // bit and with 0011 to set pos 2 to zero ?0??\r\n                    r |= 0x8; // set pos 3 to 1 as 1???\r\n                    guidResponse += hex[r];\r\n                }\r\n                else {\r\n                    guidResponse += guidHolder[i];\r\n                }\r\n            }\r\n            return guidResponse;\r\n        }\r\n    };\r\n    /*\r\n     * Parses out the components from a url string.\r\n     * @returns An object with the various components. Please cache this value insted of calling this multiple times on the same url.\r\n     */\r\n    Utils.GetUrlComponents = function (url) {\r\n        if (!url) {\r\n            throw \"Url required\";\r\n        }\r\n        // https://gist.github.com/curtisz/11139b2cfcaef4a261e0\r\n        var regEx = RegExp(\"^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\\\?([^#]*))?(#(.*))?\");\r\n        var match = url.match(regEx);\r\n        if (!match || match.length < 6) {\r\n            throw \"Valid url required\";\r\n        }\r\n        var urlComponents = {\r\n            Protocol: match[1],\r\n            HostNameAndPort: match[4],\r\n            AbsolutePath: match[5]\r\n        };\r\n        var pathSegments = urlComponents.AbsolutePath.split(\"/\");\r\n        pathSegments = pathSegments.filter(function (val) { return val && val.length > 0; }); // remove empty elements\r\n        urlComponents.PathSegments = pathSegments;\r\n        return urlComponents;\r\n    };\r\n    /*\r\n     * Given a url or path, append a trailing slash if one doesnt exist\r\n     */\r\n    Utils.CanonicalizeUri = function (url) {\r\n        if (url) {\r\n            url = url.toLowerCase();\r\n        }\r\n        if (url && !Utils.endsWith(url, \"/\")) {\r\n            url += \"/\";\r\n        }\r\n        return url;\r\n    };\r\n    /*\r\n      * Checks to see if the url ends with the suffix\r\n      * Required because we are compiling for es5 instead of es6\r\n      * @param url\r\n      * @param str\r\n      */\r\n    Utils.endsWith = function (url, suffix) {\r\n        if (!url || !suffix) {\r\n            return false;\r\n        }\r\n        return url.indexOf(suffix, url.length - suffix.length) !== -1;\r\n    };\r\n    return Utils;\r\n}());\r\nexports.Utils = Utils;\r\n//# sourceMappingURL=Utils.js.map"]},"metadata":{},"sourceType":"script"}