{"ast":null,"code":"\"use strict\";\n/*\r\n  * Copyright (c) Microsoft Corporation\r\n  *  All Rights Reserved\r\n  *  MIT License\r\n  *\r\n  * Permission is hereby granted, free of charge, to any person obtaining a copy of this\r\n  * software and associated documentation files (the \"Software\"), to deal in the Software\r\n  * without restriction, including without limitation the rights to use, copy, modify,\r\n  * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\r\n  * permit persons to whom the Software is furnished to do so, subject to the following\r\n  * conditions:\r\n  *\r\n  * The above copyright notice and this permission notice shall be\r\n  * included in all copies or substantial portions of the Software.\r\n  *\r\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n  * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\r\n  * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n  * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\r\n  * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n  */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Utils_1 = require(\"./Utils\");\n/*\r\n * @hidden\r\n */\n\n\nvar IdToken =\n/** @class */\nfunction () {\n  function IdToken(rawIdToken) {\n    if (Utils_1.Utils.isEmpty(rawIdToken)) {\n      throw new Error(\"null or empty raw idtoken\");\n    }\n\n    try {\n      this.rawIdToken = rawIdToken;\n      this.decodedIdToken = Utils_1.Utils.extractIdToken(rawIdToken);\n\n      if (this.decodedIdToken) {\n        if (this.decodedIdToken.hasOwnProperty(\"iss\")) {\n          this.issuer = this.decodedIdToken[\"iss\"];\n        }\n\n        if (this.decodedIdToken.hasOwnProperty(\"oid\")) {\n          this.objectId = this.decodedIdToken['oid'];\n        }\n\n        if (this.decodedIdToken.hasOwnProperty(\"sub\")) {\n          this.subject = this.decodedIdToken[\"sub\"];\n        }\n\n        if (this.decodedIdToken.hasOwnProperty(\"tid\")) {\n          this.tenantId = this.decodedIdToken[\"tid\"];\n        }\n\n        if (this.decodedIdToken.hasOwnProperty(\"ver\")) {\n          this.version = this.decodedIdToken[\"ver\"];\n        }\n\n        if (this.decodedIdToken.hasOwnProperty(\"preferred_username\")) {\n          this.preferredName = this.decodedIdToken[\"preferred_username\"];\n        }\n\n        if (this.decodedIdToken.hasOwnProperty(\"name\")) {\n          this.name = this.decodedIdToken[\"name\"];\n        }\n\n        if (this.decodedIdToken.hasOwnProperty(\"nonce\")) {\n          this.nonce = this.decodedIdToken[\"nonce\"];\n        }\n\n        if (this.decodedIdToken.hasOwnProperty(\"exp\")) {\n          this.expiration = this.decodedIdToken[\"exp\"];\n        }\n\n        if (this.decodedIdToken.hasOwnProperty(\"home_oid\")) {\n          this.homeObjectId = this.decodedIdToken[\"home_oid\"];\n        }\n      }\n    } catch (e) {\n      throw new Error(\"Failed to parse the returned id token\");\n    }\n  }\n\n  return IdToken;\n}();\n\nexports.IdToken = IdToken;","map":{"version":3,"sources":["../src/IdToken.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuBA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;AAEA;;;;;AAGA,IAAA,OAAA;AAAA;AAAA,YAAA;AAeE,WAAA,OAAA,CAAY,UAAZ,EAA8B;AAC5B,QAAI,OAAA,CAAA,KAAA,CAAM,OAAN,CAAc,UAAd,CAAJ,EAA+B;AAC7B,YAAM,IAAI,KAAJ,CAAU,2BAAV,CAAN;AACD;;AACD,QAAI;AACF,WAAK,UAAL,GAAkB,UAAlB;AACA,WAAK,cAAL,GAAsB,OAAA,CAAA,KAAA,CAAM,cAAN,CAAqB,UAArB,CAAtB;;AACA,UAAI,KAAK,cAAT,EAAyB;AACvB,YAAI,KAAK,cAAL,CAAoB,cAApB,CAAmC,KAAnC,CAAJ,EAA+C;AAC7C,eAAK,MAAL,GAAc,KAAK,cAAL,CAAoB,KAApB,CAAd;AACD;;AAED,YAAI,KAAK,cAAL,CAAoB,cAApB,CAAmC,KAAnC,CAAJ,EAA+C;AAC3C,eAAK,QAAL,GAAgB,KAAK,cAAL,CAAoB,KAApB,CAAhB;AACH;;AAED,YAAI,KAAK,cAAL,CAAoB,cAApB,CAAmC,KAAnC,CAAJ,EAA+C;AAC7C,eAAK,OAAL,GAAe,KAAK,cAAL,CAAoB,KAApB,CAAf;AACD;;AAED,YAAI,KAAK,cAAL,CAAoB,cAApB,CAAmC,KAAnC,CAAJ,EAA+C;AAC7C,eAAK,QAAL,GAAgB,KAAK,cAAL,CAAoB,KAApB,CAAhB;AACD;;AAED,YAAI,KAAK,cAAL,CAAoB,cAApB,CAAmC,KAAnC,CAAJ,EAA+C;AAC7C,eAAK,OAAL,GAAe,KAAK,cAAL,CAAoB,KAApB,CAAf;AACD;;AAED,YAAI,KAAK,cAAL,CAAoB,cAApB,CAAmC,oBAAnC,CAAJ,EAA8D;AAC5D,eAAK,aAAL,GAAqB,KAAK,cAAL,CAAoB,oBAApB,CAArB;AACD;;AAED,YAAI,KAAK,cAAL,CAAoB,cAApB,CAAmC,MAAnC,CAAJ,EAAgD;AAC9C,eAAK,IAAL,GAAY,KAAK,cAAL,CAAoB,MAApB,CAAZ;AACD;;AAED,YAAI,KAAK,cAAL,CAAoB,cAApB,CAAmC,OAAnC,CAAJ,EAAiD;AAC/C,eAAK,KAAL,GAAa,KAAK,cAAL,CAAoB,OAApB,CAAb;AACD;;AAED,YAAI,KAAK,cAAL,CAAoB,cAApB,CAAmC,KAAnC,CAAJ,EAA+C;AAC7C,eAAK,UAAL,GAAkB,KAAK,cAAL,CAAoB,KAApB,CAAlB;AACD;;AAED,YAAI,KAAK,cAAL,CAAoB,cAApB,CAAmC,UAAnC,CAAJ,EAAoD;AAChD,eAAK,YAAL,GAAoB,KAAK,cAAL,CAAoB,UAApB,CAApB;AACH;AACF;AACF,KA5CD,CA4CE,OAAO,CAAP,EAAU;AACV,YAAM,IAAI,KAAJ,CAAU,uCAAV,CAAN;AACD;AACF;;AAEH,SAAA,OAAA;AAAC,CApED,EAAA;;AAAa,OAAA,CAAA,OAAA,GAAA,OAAA","sourceRoot":"","sourcesContent":["\"use strict\";\r\n/*\r\n  * Copyright (c) Microsoft Corporation\r\n  *  All Rights Reserved\r\n  *  MIT License\r\n  *\r\n  * Permission is hereby granted, free of charge, to any person obtaining a copy of this\r\n  * software and associated documentation files (the \"Software\"), to deal in the Software\r\n  * without restriction, including without limitation the rights to use, copy, modify,\r\n  * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\r\n  * permit persons to whom the Software is furnished to do so, subject to the following\r\n  * conditions:\r\n  *\r\n  * The above copyright notice and this permission notice shall be\r\n  * included in all copies or substantial portions of the Software.\r\n  *\r\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n  * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\r\n  * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n  * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\r\n  * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n  */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Utils_1 = require(\"./Utils\");\r\n/*\r\n * @hidden\r\n */\r\nvar IdToken = /** @class */ (function () {\r\n    function IdToken(rawIdToken) {\r\n        if (Utils_1.Utils.isEmpty(rawIdToken)) {\r\n            throw new Error(\"null or empty raw idtoken\");\r\n        }\r\n        try {\r\n            this.rawIdToken = rawIdToken;\r\n            this.decodedIdToken = Utils_1.Utils.extractIdToken(rawIdToken);\r\n            if (this.decodedIdToken) {\r\n                if (this.decodedIdToken.hasOwnProperty(\"iss\")) {\r\n                    this.issuer = this.decodedIdToken[\"iss\"];\r\n                }\r\n                if (this.decodedIdToken.hasOwnProperty(\"oid\")) {\r\n                    this.objectId = this.decodedIdToken['oid'];\r\n                }\r\n                if (this.decodedIdToken.hasOwnProperty(\"sub\")) {\r\n                    this.subject = this.decodedIdToken[\"sub\"];\r\n                }\r\n                if (this.decodedIdToken.hasOwnProperty(\"tid\")) {\r\n                    this.tenantId = this.decodedIdToken[\"tid\"];\r\n                }\r\n                if (this.decodedIdToken.hasOwnProperty(\"ver\")) {\r\n                    this.version = this.decodedIdToken[\"ver\"];\r\n                }\r\n                if (this.decodedIdToken.hasOwnProperty(\"preferred_username\")) {\r\n                    this.preferredName = this.decodedIdToken[\"preferred_username\"];\r\n                }\r\n                if (this.decodedIdToken.hasOwnProperty(\"name\")) {\r\n                    this.name = this.decodedIdToken[\"name\"];\r\n                }\r\n                if (this.decodedIdToken.hasOwnProperty(\"nonce\")) {\r\n                    this.nonce = this.decodedIdToken[\"nonce\"];\r\n                }\r\n                if (this.decodedIdToken.hasOwnProperty(\"exp\")) {\r\n                    this.expiration = this.decodedIdToken[\"exp\"];\r\n                }\r\n                if (this.decodedIdToken.hasOwnProperty(\"home_oid\")) {\r\n                    this.homeObjectId = this.decodedIdToken[\"home_oid\"];\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            throw new Error(\"Failed to parse the returned id token\");\r\n        }\r\n    }\r\n    return IdToken;\r\n}());\r\nexports.IdToken = IdToken;\r\n//# sourceMappingURL=IdToken.js.map"]},"metadata":{},"sourceType":"script"}