{"ast":null,"code":"\"use strict\";\n/**\r\n * Copyright (c) Microsoft Corporation\r\n *  All Rights Reserved\r\n *  MIT License\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this\r\n * software and associated documentation files (the 'Software'), to deal in the Software\r\n * without restriction, including without limitation the rights to use, copy, modify,\r\n * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to the following\r\n * conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\r\n * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\r\n * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Utils_1 = require(\"./Utils\");\n/*\r\n * @hidden\r\n */\n\n\nvar ClientInfo =\n/** @class */\nfunction () {\n  function ClientInfo(rawClientInfo) {\n    if (!rawClientInfo || Utils_1.Utils.isEmpty(rawClientInfo)) {\n      this.uid = \"\";\n      this.utid = \"\";\n      return;\n    }\n\n    try {\n      var decodedClientInfo = Utils_1.Utils.base64DecodeStringUrlSafe(rawClientInfo);\n      var clientInfo = JSON.parse(decodedClientInfo);\n\n      if (clientInfo) {\n        if (clientInfo.hasOwnProperty(\"uid\")) {\n          this.uid = clientInfo.uid;\n        }\n\n        if (clientInfo.hasOwnProperty(\"utid\")) {\n          this.utid = clientInfo.utid;\n        }\n      }\n    } catch (e) {\n      throw new Error(e);\n    }\n  }\n\n  Object.defineProperty(ClientInfo.prototype, \"uid\", {\n    get: function () {\n      return this._uid ? this._uid : \"\";\n    },\n    set: function (uid) {\n      this._uid = uid;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ClientInfo.prototype, \"utid\", {\n    get: function () {\n      return this._utid ? this._utid : \"\";\n    },\n    set: function (utid) {\n      this._utid = utid;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return ClientInfo;\n}();\n\nexports.ClientInfo = ClientInfo;","map":{"version":3,"sources":["../src/ClientInfo.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuBA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;AAEA;;;;;AAGA,IAAA,UAAA;AAAA;AAAA,YAAA;AAoBE,WAAA,UAAA,CAAY,aAAZ,EAAiC;AAC/B,QAAI,CAAC,aAAD,IAAkB,OAAA,CAAA,KAAA,CAAM,OAAN,CAAc,aAAd,CAAtB,EAAoD;AAClD,WAAK,GAAL,GAAW,EAAX;AACA,WAAK,IAAL,GAAY,EAAZ;AACA;AACD;;AAED,QAAI;AACF,UAAM,iBAAiB,GAAW,OAAA,CAAA,KAAA,CAAM,yBAAN,CAAgC,aAAhC,CAAlC;AACA,UAAM,UAAU,GAA2B,IAAI,CAAC,KAAL,CAAW,iBAAX,CAA3C;;AACA,UAAI,UAAJ,EAAgB;AACd,YAAI,UAAU,CAAC,cAAX,CAA0B,KAA1B,CAAJ,EAAsC;AACpC,eAAK,GAAL,GAAW,UAAU,CAAC,GAAtB;AACD;;AAED,YAAI,UAAU,CAAC,cAAX,CAA0B,MAA1B,CAAJ,EAAuC;AACrC,eAAK,IAAL,GAAY,UAAU,CAAC,IAAvB;AACD;AACF;AACF,KAZD,CAYE,OAAO,CAAP,EAAU;AACV,YAAM,IAAI,KAAJ,CAAU,CAAV,CAAN;AACD;AACF;;AAvCD,EAAA,MAAA,CAAA,cAAA,CAAI,UAAA,CAAA,SAAJ,EAAI,KAAJ,EAAO;SAAP,YAAA;AACE,aAAO,KAAK,IAAL,GAAY,KAAK,IAAjB,GAAwB,EAA/B;AACD,KAFM;SAIP,UAAQ,GAAR,EAAmB;AACjB,WAAK,IAAL,GAAY,GAAZ;AACD,KANM;oBAAA;;AAAA,GAAP;AASA,EAAA,MAAA,CAAA,cAAA,CAAI,UAAA,CAAA,SAAJ,EAAI,MAAJ,EAAQ;SAAR,YAAA;AACE,aAAO,KAAK,KAAL,GAAa,KAAK,KAAlB,GAA0B,EAAjC;AACD,KAFO;SAIR,UAAS,IAAT,EAAqB;AACnB,WAAK,KAAL,GAAa,IAAb;AACD,KANO;oBAAA;;AAAA,GAAR;AA+BF,SAAA,UAAA;AAAC,CA3CD,EAAA;;AAAa,OAAA,CAAA,UAAA,GAAA,UAAA","sourceRoot":"","sourcesContent":["\"use strict\";\r\n/**\r\n * Copyright (c) Microsoft Corporation\r\n *  All Rights Reserved\r\n *  MIT License\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this\r\n * software and associated documentation files (the 'Software'), to deal in the Software\r\n * without restriction, including without limitation the rights to use, copy, modify,\r\n * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to the following\r\n * conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\r\n * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\r\n * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Utils_1 = require(\"./Utils\");\r\n/*\r\n * @hidden\r\n */\r\nvar ClientInfo = /** @class */ (function () {\r\n    function ClientInfo(rawClientInfo) {\r\n        if (!rawClientInfo || Utils_1.Utils.isEmpty(rawClientInfo)) {\r\n            this.uid = \"\";\r\n            this.utid = \"\";\r\n            return;\r\n        }\r\n        try {\r\n            var decodedClientInfo = Utils_1.Utils.base64DecodeStringUrlSafe(rawClientInfo);\r\n            var clientInfo = JSON.parse(decodedClientInfo);\r\n            if (clientInfo) {\r\n                if (clientInfo.hasOwnProperty(\"uid\")) {\r\n                    this.uid = clientInfo.uid;\r\n                }\r\n                if (clientInfo.hasOwnProperty(\"utid\")) {\r\n                    this.utid = clientInfo.utid;\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            throw new Error(e);\r\n        }\r\n    }\r\n    Object.defineProperty(ClientInfo.prototype, \"uid\", {\r\n        get: function () {\r\n            return this._uid ? this._uid : \"\";\r\n        },\r\n        set: function (uid) {\r\n            this._uid = uid;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientInfo.prototype, \"utid\", {\r\n        get: function () {\r\n            return this._utid ? this._utid : \"\";\r\n        },\r\n        set: function (utid) {\r\n            this._utid = utid;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ClientInfo;\r\n}());\r\nexports.ClientInfo = ClientInfo;\r\n//# sourceMappingURL=ClientInfo.js.map"]},"metadata":{},"sourceType":"script"}